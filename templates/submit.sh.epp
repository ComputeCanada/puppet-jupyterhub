#!/bin/bash
{% if account %}#SBATCH --account={{account}}{% endif %}
#SBATCH --time={{runtime}}
#SBATCH --output={{homedir}}/.jupyterhub_slurmspawner_%j.log
#SBATCH --job-name=spawner-jupyterhub
#SBATCH --chdir={{homedir}}
#SBATCH --mem={{memory}}
#SBATCH --cpus-per-task={{nprocs}}
#SBATCH --export={{keepvars}}
{% if oversubscribe %}#SBATCH --oversubscribe{% endif %}
{% if reservation %}#SBATCH --reservation={{reservation}}{% endif %}
{% if gpus != "gpu:0" %}#SBATCH --gres={{gpus}}{% endif %}
<% if $slurm_partitions != '' { %>
#SBATCH --partition=<%= $slurm_partitions %>
<% } %>

<% if $export_vals == {} { %>
unset XDG_RUNTIME_DIR

# Disable variable export with sbatch
export SBATCH_EXPORT=NONE
# Avoid steps inheriting environment export
# settings from the sbatch command
unset SLURM_EXPORT_ENV

# Setup user pip install folder
export PIP_PREFIX=${SLURM_TMPDIR}
export PATH="${PIP_PREFIX}/bin":${PATH}
export PYTHONPATH=${PYTHONPATH}:"<%= $node_prefix %>/lib/usercustomize"

# Make sure the environment-level directories does not
# have priority over user-level directories for config and data.
# Jupyter core is trying to be smart with virtual environments
# and it is not doing the right thing in our case.
export JUPYTER_PREFER_ENV_PATH=0
<% } %>

<% $export_vals.each |$key, $value| { %>
export <%= $key -%>=<%=$value -%>
<% } %>

{% if modules %}
module load {{modules|join(' ')}}
{% endif %}

<% if $kernel_setup == 'venv' { %>
# Activate kernel virtual environment
export VIRTUAL_ENV_DISABLE_PROMPT=1
source <%= $venv_prefix %>/bin/activate
<% } %>

# Launch jupyterhub single server
{{cmd}}
