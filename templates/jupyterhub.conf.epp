# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# HTTPS server to handle JupyterHub
server {
    listen 443 ssl;

    server_name <%= $domain_name %>;

    location / {
        client_max_body_size 50M;

        proxy_pass https://127.0.0.1:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Managing requests to verify letsencrypt host
    location ~ /.well-known {
        allow all;
    }

    ssl_stapling on;
    ssl_stapling_verify on;

    gzip off;

    add_header Strict-Transport-Security max-age=15768000;

    ssl_session_timeout 1d;
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/ffdhe4096.pem;

<% if $use_letsencrypt { %>
    ssl_certificate     /etc/letsencrypt/live/<%= $domain_name %>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<%= $domain_name %>/privkey.pem;
<% } else { %>
    ssl_certificate     <%= $ssl_certificate_path %>;
    ssl_certificate_key <%= $ssl_certificate_key_path %>;
<% } %>
}

server {
    if ($host = <%= $domain_name %>) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name <%= $domain_name %>;
    return 404;
}
